// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  password String
  image    String?
  Room     Room[]    @relation("Creator")
  room     Room[]    @relation("Participant")
  Message  Message[] @relation("Sender")
  message  Message[] @relation("Receiver")
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  img        String?
  senderId   String   @db.ObjectId
  sender     User     @relation(name: "Sender", fields: [senderId], references: [id])
  receiverId String   @db.ObjectId
  receiver   User     @relation(name: "Receiver", fields: [receiverId], references: [id])
  roomId     String
  room       Room     @relation(name: "Room", fields: [roomId], references: [room])
  createdAt  DateTime @default(now())
}

model Room {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  room          String    @unique
  creatorId     String    @db.ObjectId
  creator       User      @relation(name: "Creator", fields: [creatorId], references: [id])
  participantId String    @db.ObjectId
  participant   User      @relation(name: "Participant", fields: [participantId], references: [id])
  Message       Message[] @relation("Room")
}
